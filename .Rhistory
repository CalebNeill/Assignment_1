return(species_names[value])
}
df_int %>% ggplot(mapping = aes(x = field_site, y = range, colour = field_site, group = field_site)) +
geom_boxplot() +
facet_wrap(~ species, labeller = species_labeller) +
geom_jitter(width = 0.2, height = 0)
df_int %>% ggplot(mapping = aes(x = field_site, y = range, colour = field_site, group = field_site)) +
geom_boxplot() +
facet_grid(~ species, labeller = species_labeller) +
geom_jitter(width = 0.2, height = 0)
species_labeller <- function(variable, value){
return(species_names[value])
}
df_int %>% ggplot(mapping = aes(x = field_site, y = range, colour = field_site, group = field_site)) +
geom_boxplot() +
facet_grid(~ species, labeller = species_labeller) +
geom_jitter(width = 0.2, height = 0)
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
species_labeller <- function(variable, value){
return(species_names[value])
}
df_int %>% ggplot(mapping = aes(x = field_site, y = range, colour = field_site, group = field_site)) +
geom_boxplot() +
facet_grid(~ species, labeller = species_labeller) +
geom_jitter(width = 0.2, height = 0)
df_int %>% ggplot(mapping = aes(x = species, y = weight, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
#graph displaying the differences in weight between each field site
df_int %>% ggplot(mapping = aes(x = field_site, y = weight, colour = field_site, group = field_site)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0)
df_int %>% ggplot(mapping = aes(x = species, y = weight, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
#graph displaying the differences in weight between each field site
df_int %>% ggplot(mapping = aes(x = field_site, y = weight, colour = field_site, group = field_site)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0)
df_int %>% ggplot(mapping = aes(x = species, y = weight, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
#graphs displaying the differences in weight between species and field sites in relation to each variable separately
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
species_labeller <- function(variable, value){
return(species_names[value])
}
df_int %>% ggplot(mapping = aes(x = field_site, y = range, colour = field_site, group = field_site)) +
geom_boxplot() +
facet_grid(~ species, labeller = species_labeller) +
geom_jitter(width = 0.2, height = 0)
facet_wrap(~ field_site)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species) +
geom_point() +
facet_wrap(~ field_site)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
facet_wrap(~ field_site)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point()
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = field_site, group = field_site)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(species)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = field_site, group = field_site)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ field_site)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species) =
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
ttest_RFbY <- df_int %>%
group_by(year) %>%
t_test(range ~ field_site) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
#graph displaying the differences in weight between each field site
df_int %>% ggplot(mapping = aes(x = field_site, y = weight, colour = field_site, group = field_site)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0)
df_int %>% ggplot(mapping = aes(x = species, y = weight, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
#graphs displaying the differences in weight between species and field sites in relation to each variable separately
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
species_labeller <- function(variable, value){
return(species_names[value])
}
df_int %>% ggplot(mapping = aes(x = field_site, y = range, colour = field_site, group = field_site)) +
geom_boxplot() +
facet_grid(~ species, labeller = species_labeller) +
geom_jitter(width = 0.2, height = 0)
#testing correlation between range and weight and species differences
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = year, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
unique(df)
unique(df$year)
#replace spelling of incorrect species
which(df == "A Mendacium")
df[df == "A Mendacium"] <- "A mendacium"
which(df == "2217")
unique(df$year)
which(df == "2217")
df[df == "2217"] <- "2017"
unique(df$year)
df[df == "2217"] <- "2017"
#ensuring all necessary libraries are set before running the code
library(tidyverse)
library(readxl)
library(tidyverse)
library(janitor)
library(ggplot2)
library(GGally)
library(rstatix)
#readxl commands necessary for multi-sheet excel document
data_file <- "BIOL3207_Assignment1_DataFile.xlsx"
read_xlsx(data_file, skip = 8)
#creating the id names for the different sheets
site_names <- excel_sheets(data_file)
site_names
species_names <- c("A_fictus", "A_mendacium")
#creating a list of data frames from each excel sheet
df_list <- map(set_names(excel_sheets(data_file)),
read_excel, path = data_file)
#note the change in sheet names when converted to data frames
lapply(names(df_list), function(x)
assign(x, df_list[[x]], envir = .GlobalEnv))
#edit the first sheet in data frame form to prevent issues with the comments within the excel document
df_list[[1]] <- df_list[[1]][-c(1,2,3,4,5,6,7), ]
df_list[[1]] <- row_to_names(df_list[[1]], row_number = 1)
#add column to each data frame in list for "field site"
df_list <- mapply(cbind, df_list, "Field_Site" = site_names, SIMPLIFY = F)
df_list
#combine each data frame into a single data frame
df <- rbind(df_list[[1]],df_list[[2]],df_list[[3]],df_list[[4]],df_list[[5]])
df
unique(df$year)
df[df == "2217"] <- "2017"
#checking for na values in the df
na_point <- is.na(df)
colSums(na_point)
colnames(df)[colSums(is.na(df)) > 0]
#check spelling of each species value
df %>% filter(!(is.na(Species))) %>% tabyl(Species, Field_Site)
#replace spelling of incorrect species
which(df == "A Mendacium")
df[df == "A Mendacium"] <- "A mendacium"
df %>% filter(!(is.na(Species))) %>% tabyl(Species, Field_Site)
#change the names of the columns to better write code
colnames(df) <- c("range", "weight", "height", "species", "year", "field_site")
df
#failed graph
df %>% filter(!(is.na(species))) %>% filter(!(is.na(`Range (square km)`))) %>% ggplot(mapping = aes(x = Field_Site, y = `Range (square km)`, colour = Field_Site)) +
geom_boxplot() +
geom_smooth() +
geom_jitter(width = 0.2, height = 0)
df2 <- na.omit(df)
df2 <- mutate(df2, species = case_when(
df2$species == "A fictus" ~ 1,
df2$species == "A mendacium" ~ 2))
df2 <- mutate(df2, field_site = case_when(
df2$field_site == "Field Site 1" ~ 1,
df2$field_site == "Field Site 2" ~ 2,
df2$field_site == "Field Site 3" ~ 3,
df2$field_site == "Field Site 4" ~ 4,
df2$field_site == "Field Site 5" ~ 5,))
df2
#creating another dataframe that has each data value as an integer
df_int <- df2
df_int[] <- lapply(df_int, function(x) as.numeric(as.character(x)))
sapply(df_int, class)
df_tib <- as_tibble(df2)
df_tib
cor(df_int[, c("range", "weight", "height", "species", "year")])
ttest_RFbS <- df_int %>%
group_by(species) %>%
t_test(range ~ field_site) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_RFbS
ttest_WFbS <- df_int %>%
group_by(species) %>%
t_test(weight ~ field_site) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_WFbS
ttest_HFbS <- df_int %>%
group_by(species) %>%
t_test(height ~ field_site) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_HFbS
ttest_RSbF <- df_int %>%
group_by(field_site) %>%
t_test(range ~ species) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_RSbF
ttest_WSbF <- df_int %>%
group_by(field_site) %>%
t_test(weight ~ species) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_WSbF
ttest_HSbF <- df_int %>%
group_by(field_site) %>%
t_test(height ~ species) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_HSbF
#graph displaying the differences in weight between each field site
df_int %>% ggplot(mapping = aes(x = field_site, y = weight, colour = field_site, group = field_site)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0)
df_int %>% ggplot(mapping = aes(x = species, y = weight, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
#graphs displaying the differences in weight between species and field sites in relation to each variable separately
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
species_labeller <- function(variable, value){
return(species_names[value])
}
df_int %>% ggplot(mapping = aes(x = field_site, y = range, colour = field_site, group = field_site)) +
geom_boxplot() +
facet_grid(~ species, labeller = species_labeller) +
geom_jitter(width = 0.2, height = 0)
#testing correlation between range and weight and species differences
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = year, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = year, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
#error in data entry needs to be fixed to prevent errors
unique(df$year)
df[df == "2217"] <- "2017"
#testing correlation between range and weight and species differences
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species, labeller = species_labeller) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
write.csv(df_tib, "u7126105_BIOL3207_Assignment1_DataFile.xlsx")
#ensuring all necessary libraries are set before running the code
library(tidyverse)
library(readxl)
library(tidyverse)
library(janitor)
library(ggplot2)
library(GGally)
library(rstatix)
#readxl commands necessary for multi-sheet excel document
data_file <- "BIOL3207_Assignment1_DataFile.xlsx"
read_xlsx(data_file, skip = 8)
#creating the id names for the different sheets
site_names <- excel_sheets(data_file)
site_names
#species names for easier coding in future
species_names <- c("A_fictus", "A_mendacium")
#creating a list of data frames from each excel sheet
df_list <- map(set_names(excel_sheets(data_file)),
read_excel, path = data_file)
#note the change in sheet names when converted to data frames
lapply(names(df_list), function(x)
assign(x, df_list[[x]], envir = .GlobalEnv))
#edit the first sheet in data frame form to prevent issues with the comments within the excel document
df_list[[1]] <- df_list[[1]][-c(1,2,3,4,5,6,7), ]
df_list[[1]] <- row_to_names(df_list[[1]], row_number = 1)
#add column to each data frame in list for "field site"
df_list <- mapply(cbind, df_list, "Field_Site" = site_names, SIMPLIFY = F)
df_list
#combine each data frame into a single data frame
df <- rbind(df_list[[1]],df_list[[2]],df_list[[3]],df_list[[4]],df_list[[5]])
df
#error in data entry needs to be fixed to prevent errors
unique(df$year)
df[df == "2217"] <- "2017"
#checking for na values in the df
na_point <- is.na(df)
colSums(na_point)
colnames(df)[colSums(is.na(df)) > 0]
#check spelling of each species value
df %>% filter(!(is.na(Species))) %>% tabyl(Species, Field_Site)
#replace spelling of incorrect species
which(df == "A Mendacium")
df[df == "A Mendacium"] <- "A mendacium"
df %>% filter(!(is.na(Species))) %>% tabyl(Species, Field_Site)
#change the names of the columns to better write code
colnames(df) <- c("range", "weight", "height", "species", "year", "field_site")
df
#remove na values from data frame
df2 <- na.omit(df)
#change species and field site names to values for easier graphing and analysis
df2 <- mutate(df2, species = case_when(
df2$species == "A fictus" ~ 1,
df2$species == "A mendacium" ~ 2))
df2 <- mutate(df2, field_site = case_when(
df2$field_site == "Field Site 1" ~ 1,
df2$field_site == "Field Site 2" ~ 2,
df2$field_site == "Field Site 3" ~ 3,
df2$field_site == "Field Site 4" ~ 4,
df2$field_site == "Field Site 5" ~ 5,))
df2
#creating another dataframe that has each data value as an integer
df_int <- df2
df_int[] <- lapply(df_int, function(x) as.numeric(as.character(x)))
sapply(df_int, class)
#creation of tibble from data frame
df_tib <- as_tibble(df2)
df_tib
write.csv(df_tib, "u7126105_BIOL3207_Assignment1_DataFile.xlsx")
#correlations between different variables to detect signifcance
cor(df_int[, c("range", "weight", "height", "species", "year")])
#t tests to test for significance between the variables, field site and species
#naming code: RFbS = Range ~ Field site by species
ttest_RFbS <- df_int %>%
group_by(species) %>%
t_test(range ~ field_site) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_RFbS
ttest_WFbS <- df_int %>%
group_by(species) %>%
t_test(weight ~ field_site) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_WFbS
ttest_HFbS <- df_int %>%
group_by(species) %>%
t_test(height ~ field_site) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_HFbS
ttest_RSbF <- df_int %>%
group_by(field_site) %>%
t_test(range ~ species) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_RSbF
ttest_WSbF <- df_int %>%
group_by(field_site) %>%
t_test(weight ~ species) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_WSbF
ttest_HSbF <- df_int %>%
group_by(field_site) %>%
t_test(height ~ species) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance()
ttest_HSbF
#graph displaying the differences in weight between each field site
df_int %>% ggplot(mapping = aes(x = field_site, y = weight, colour = field_site, group = field_site)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0)
df_int %>% ggplot(mapping = aes(x = species, y = weight, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
#graphs displaying the differences in range between species and field sites in relation to each variable separately
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = species, y = range, colour = species, group = species)) +
geom_boxplot() +
facet_wrap(~ field_site) +
geom_jitter(width = 0.2, height = 0) +
scale_x_continuous(breaks = seq(1,2, by=1), labels = species_names) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
species_labeller <- function(variable, value){
return(species_names[value])
}
df_int %>% ggplot(mapping = aes(x = field_site, y = range, colour = field_site, group = field_site)) +
geom_boxplot() +
facet_grid(~ species, labeller = species_labeller) +
geom_jitter(width = 0.2, height = 0)
#testing correlation between range and weight and species differences
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species, group = species)) +
geom_point() +
geom_smooth(method=lm) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
df_int %>% ggplot(mapping = aes(x = weight, y = range, colour = species)) +
geom_point() +
geom_smooth(method=lm) +
facet_grid(~ species, labeller = species_labeller) +
scale_colour_continuous(breaks = c(1,2), labels = species_names)
